#include <stdio.h>
#include <stdlib.h>

// Define the node structure
struct Node {
    int data;
    struct Node* next;
};

// Function to push an element to the stack
void push(struct Node** top, int data) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = *top;
    *top = newNode;
}

// Function to pop an element from the stack
int pop(struct Node** top) {
    if (*top == NULL) {
        printf("Stack underflow!\n");
        return -1; // Return -1 if the stack is empty
    }

    struct Node* temp = *top;
    int data = temp->data;
    *top = (*top)->next;
    free(temp); // Free the memory for the popped node

    return data;
}

// Function to display the stack elements
void displayStack(struct Node* top) {
    if (top == NULL) {
        printf("Stack is empty!\n");
        return;
    }

    struct Node* temp = top;
    printf("Stack: ");
    while (temp != NULL) {
        printf("%d ", temp->data);
        temp = temp->next;
    }
    printf("\n");
}

int main() {
    struct Node* stack = NULL;

    push(&stack, 10);
    push(&stack, 20);
    push(&stack, 30);
    push(&stack, 40);

    displayStack(stack);

    printf("Popped: %d\n", pop(&stack));
    displayStack(stack);

    return 0;
}
